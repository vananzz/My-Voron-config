[include fluidd.cfg]

[include klicky-probe.cfg]

[include macros.cfg]

[include nozzle_scrub.cfg]

[include stealthburner_leds.cfg]

[include KAMP_Settings.cfg]

[include K-ShakeTune/*.cfg]

[include calibrate_pa.cfg]

[include timelapse.cfg]

# [include ercf_hardware.cfg]

[include OrbiterSensor.cfg]

[pause_resume]

[display_status]

[exclude_object]

[virtual_sdcard]
path: /home/biqu/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[mcu CB1]
serial: /tmp/klipper_host_mcu

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_1F003A000A51323332353039-if00

[mcu can0]
canbus_uuid: 23bd61303be5 # run the following command to locate the uuid >   ~/klippy-env/bin/python ~/klipper/scripts/canbus_query.py can0

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 2000   			#Max 4000
max_z_velocity: 5 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 10
square_corner_velocity: 5

# [adxl345] #BTT PI
# cs_pin: CB1:gpio67
# spi_bus: spidev0.0
# axes_map: -z,y,x

[adxl345] #BTT PI
cs_pin: can0:PB12
spi_software_sclk_pin: can0:PB10
spi_software_mosi_pin: can0:PB11
spi_software_miso_pin: can0:PB2
axes_map: x,z,-y
 
[resonance_tester]
accel_chip: adxl345
# accel_per_hz: 70
probe_points: 150,150,30

[input_shaper]
shaper_freq_x: 59.6
shaper_type_x: mzv
shaper_freq_y: 40.0
shaper_type_y: mzv
damping_ratio_x: 0.036
damping_ratio_y: 0.064


[stepper_x]
step_pin:PC14
dir_pin:PC13
enable_pin:!PC15
microsteps: 16
rotation_distance: 40
full_steps_per_rotation:200
endstop_pin:can0:PB7
# endstop_pin:PA14
position_min: 0
position_endstop: 299
position_max: 300

#--------------------------------------------------------------------
homing_speed:60
second_homing_speed:20
homing_retract_dist:30
homing_positive_dir:true

[stepper_y]
step_pin:PE5
dir_pin:PE4
enable_pin:!PC15
microsteps:16
rotation_distance: 40
full_steps_per_rotation:200
endstop_pin:can0:PB5
# endstop_pin:PA15
position_min: 0
position_endstop:300
position_max:301

#--------------------------------------------------------------------
homing_speed:60
second_homing_speed: 20
homing_retract_dist:30
homing_positive_dir:true

[stepper_z]
step_pin:PE1
dir_pin:PE0
enable_pin: !PE2
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 200
gear_ratio: 80:16
endstop_pin:PB13
position_endstop: 1.835
position_max: 230
position_min: -15 
homing_speed: 10
second_homing_speed: 3

[stepper_z1]
step_pin:PD6
dir_pin:!PD5
enable_pin:!PD7
microsteps:16
rotation_distance: 40
full_steps_per_rotation: 200
gear_ratio: 80:16

[stepper_z2]
step_pin:PD2
dir_pin:PD1
enable_pin:!PD3
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 200
gear_ratio: 80:16

[stepper_z3]
step_pin:PC7
dir_pin:!PC6
enable_pin:!PC8
microsteps:16
rotation_distance:40
full_steps_per_rotation: 200
gear_ratio:80:16

[extruder]
step_pin:can0:PD0
dir_pin:can0:PD1
enable_pin:!can0:PD2
# step_pin:PB5
# dir_pin:!PB4
# enable_pin:!PB6
microsteps:16
rotation_distance: 4.637
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.750
min_temp: 0
max_temp: 275
heater_pin: can0:PB13
# heater_pin: PB1
sensor_type: ATC Semitec 104GT-2
sensor_pin: can0:PA3
# sensor_pin: PC1
max_power: 1.0
control : pid  
pid_kp : 31.093 
pid_ki : 1.956
pid_kd : 123.594
# pressure_advance: 0.075
pressure_advance: 0.04
pressure_advance_smooth_time: 0.040
max_extrude_only_distance: 500
max_extrude_only_velocity: 5
max_extrude_cross_section: 10
min_extrude_temp: 200

[heater_bed]
heater_pin: PB0
sensor_type: Generic 3950
sensor_pin: PC0
max_power: 1
control = pid
# pid_Kp=52.315 pid_Ki=2.207 pid_Kd=309.967
# 110: PID parameters: pid_Kp=31.597 pid_Ki=0.792 pid_Kd=315.177
# 75: PID parameters: pid_Kp=29.488 pid_Ki=0.998 pid_Kd=217.840
pid_kp = 52.315
pid_ki = 2.207
pid_kd = 309.967
min_temp: 0
max_temp: 120

#part cooling fan
[fan]
pin: can0:PA0
# pin: PA1

[heater_fan my_nozzle_fan]
pin: can0:PA1
# pin: PA0
# shutdown_speed: 1
# max_power: 0.5
fan_speed: 1
kick_start_time: 5

[controller_fan chamber]
pin: PA2

[temperature_fan mcu_fan]
# Electronics fan PWM
pin: PA0
max_power: 0.60
control: watermark
max_delta: 2
sensor_type: temperature_mcu
min_temp: 10
max_temp: 80
target_temp: 50
shutdown_speed: 0

[temperature_fan pi_fan]
# Electronics fan PWM
pin: PA1
max_power: 0.4
control: watermark
max_delta: 2
# sensor_mcu: CB1
sensor_type: temperature_host
min_temp: 10
max_temp: 80
target_temp: 50
shutdown_speed: 0

# [output_pin printer]
# pin: CB1:gpio71
# pwm: False
# value: 1
# shutdown_value: 0

[temperature_sensor chamber]
sensor_type: DS18B20
sensor_mcu: CB1
serial_no: 28-3ce1e380a514

[neopixel panel_ring]
pin: PC5
chain_count: 54
initial_RED: .5
initial_GREEN: .5
initial_BLUE: .5
initial_WHITE: .5

# [led_effect panel_idle]
# autostart:              true
# frame_rate:             24
# leds:
#     neopixel:panel_ring
# layers:
#     breathing  10 1 top (.5,.5,1)

[idle_timeout]
timeout: 3600

[quad_gantry_level]
gantry_corners:
	-60,-10
	360,370
##	Probe points
points:
	50,25
	50,225
	250,225
	250,25
speed: 100
retries: 5
retry_tolerance: 0.0051
max_adjust: 310

[probe]
pin:can0:PB6
# pin:PB12
x_offset: 0.8
y_offset: 26.5
z_offset: 3.289
speed: 3
samples: 2
samples_result: average
sample_retract_dist: 3.0
samples_tolerance: 0.0051
samples_tolerance_retries: 5

## Auto Z Configuration
# Measure the offset of your probe from the nozzle and update accordingly. 
# These numbers work with PCB Klicky and the stock hotend. 
# Note that you want to probe on the switch body, not the switch itself, so the switch position will be different that the probe offsets.
# You need to install the Auto Z plugin in order for this to work.
# SSH into your Klipper host and execute the following commands
# cd /home/pi
# git clone https://github.com/protoloft/klipper_z_calibration.git
# ./klipper_z_calibration/install.sh

[z_calibration]
nozzle_xy_position: 97.7, 299   #<X,Y position for clicking the nozzle on the Z endstop>
switch_xy_position: 97.7, 273.5   #<X,Y position for clicking the probe's switch body on the Z endstop>
bed_xy_position: 150, 150     #<X,Y position for probing the bed, for instance the center point>
# Update switch_offset according to your probe type. This value worked for me with PCB Klicky (Omron A201 Plunger-Style Limit Switch)
# Increase switch_offset for more squish, reduce for less
switch_offset: 0.45        #<offset of the switch trigger (read the Switch Offset section!)>
start_gcode: ATTACH_PROBE          #<macro name for attaching the probe>
#before_switch_gcode: #<macro name for attaching the probe AFTER probing the nozzle>
end_gcode: DOCK_PROBE            #<macro name for docking the probe>
safe_z_height: 12
probing_first_fast: True
samples_tolerance_retries: 1

[bed_mesh]
speed: 100
horizontal_move_z: 5
# mesh_min: 5 + 0.8, 26.5 + 26.5
# mesh_max: 295 + 0.8, 265 + 26.5
mesh_min: 10, 60
mesh_max: 290, 290
probe_count: 9, 9
algorithm: bicubic
zero_reference_position: 150, 150

# [temperature_sensor raspberry_pi]
# sensor_type: temperature_host
# min_temp: 10
# max_temp: 100

# [temperature_sensor mcu_temp]
# sensor_type: temperature_mcu
# min_temp: 0
# max_temp: 100

[temperature_sensor CANBOARD]
sensor_type: temperature_mcu
sensor_mcu: can0

########################################
# TMC UART configuration
########################################

[tmc2209 stepper_x]
uart_pin: PE6
interpolate: True
run_current: 0.8
hold_current: 0.3
sense_resistor: 0.110
stealthchop_threshold: 9999

[tmc2209 stepper_y]
uart_pin: PE3
interpolate: True
run_current: 0.8
hold_current: 0.3
sense_resistor: 0.110
stealthchop_threshold: 9999

[tmc2209 stepper_z]
uart_pin: PB7
interpolate: True
run_current: 0.8
hold_current: 0.5
stealthchop_threshold: 9999

[tmc2209 extruder]
uart_pin: can0:PA15
# uart_pin: PB3
interpolate: True
run_current: 0.85
hold_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 9999
driver_TBL: 0
driver_HEND: 6
driver_HSTRT: 7
driver_TOFF: 4

[tmc2209 stepper_z1]
uart_pin: PD4
interpolate: True
run_current: 0.8
hold_current: 0.5
stealthchop_threshold: 9999

[tmc2209 stepper_z2]
uart_pin: PD0
interpolate: True
run_current: 0.8
hold_current: 0.5
stealthchop_threshold: 9999

[tmc2209 stepper_z3]
uart_pin: PD15
interpolate: True
run_current: 0.8
hold_current: 0.5
stealthchop_threshold: 9999

[autotune_tmc stepper_x]
motor: omc-17hs19-2004s1
# tuning_goal: silent
[autotune_tmc stepper_y]
motor: omc-17hs19-2004s1
# tuning_goal: silent

[autotune_tmc stepper_z]
motor: omc-17hs19-2004s1
[autotune_tmc stepper_z1]
motor: omc-17hs19-2004s1
[autotune_tmc stepper_z2]
motor: omc-17hs19-2004s1
[autotune_tmc stepper_z3]
motor: omc-17hs19-2004s1

[autotune_tmc extruder]
motor: ldo-36sth20-1004ahg